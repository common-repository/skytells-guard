<? oxygen_import('Layouts.Header', array("title" => 'Vulnerabilities Scanner', 'page' => 'vulnerabilities')); ?>
        <div class="content">
            <div class="container-fluid">

<?php
/**
 * Admin: Plugin & Theme Exploits
 *
 * @package Skytells-AV Security Scanner
 * @author  Skytells, Inc
 */

/**
 * Do not execute this file directly.
 */
if (!defined('ABSPATH')) {
	exit;
}

use \skytells\wp\skyav\ajax;
use \skytells\wp\skyav\core;
use \skytells\wp\skyav\vendor\common;

// And onto the data!
$data = array(
	'forms'=>array(
		'exploit'=>array(
			'action'=>'skyav_ajax_exploit',
			'n'=>ajax::get_nonce(),
			'slug'=>'',
			'type'=>'plugin',
			'errors'=>array(),
			'loading'=>false,
		),
	),
	'pro'=>false,
	'plugins'=>core::get_plugins(),
	'themes'=>core::get_themes(),
	'exploits'=>array(),
	'types'=>array(
		'AUTHBYPASS'=>__('Authentication Bypass', SKYELLSAV_L10N),
		'BYPASS'=>__('Security Bypass', SKYELLSAV_L10N),
		'CSRF'=>__('Cross-Site Request Forgery', SKYELLSAV_L10N),
		'DOS'=>__('Denial of Service', SKYELLSAV_L10N),
		'FPD'=>__('Full Path Disclosure', SKYELLSAV_L10N),
		'LFI'=>__('Local File Inclusion', SKYELLSAV_L10N),
		'MULTI'=>__('Multiple', SKYELLSAV_L10N),
		'PRIVESC'=>__('Privilege Escalation', SKYELLSAV_L10N),
		'RCE'=>__('Remote Code Execution', SKYELLSAV_L10N),
		'REDIRECT'=>__('Redirection', SKYELLSAV_L10N),
		'RFI'=>__('Remote File Inclusion', SKYELLSAV_L10N),
		'SQLI'=>__('SQL Injection', SKYELLSAV_L10N),
		'SSRF'=>__('Server-Side Request Forgery', SKYELLSAV_L10N),
		'UNKNOWN'=>__('Other', SKYELLSAV_L10N),
		'UPLOAD'=>__('Arbitrary File Upload', SKYELLSAV_L10N),
		'XSS'=>__('Cross-Site Scripting', SKYELLSAV_L10N),
		'XXE'=>__('XML External Entity Processing', SKYELLSAV_L10N),
	),
	'modal'=>'',
	'modals'=>array(
		// @codingStandardsIgnoreStart
		'AUTHBYPASS'=>array(
			esc_html__('Many applications have functionality that is restricted, available only to select users, etc. But when an application contains an Authentication Bypass vulnerability, it becomes possible for attackers to access this code without logging in.', SKYELLSAV_L10N)
		),
		'BYPASS'=>array(
			esc_html__('This type of vulnerability indicates that some functionality is not properly locked off; attackers are able to bypass its security measures and/or intended functionality and do with it what they will.', SKYELLSAV_L10N)
		),
		'CSRF'=>array(
			sprintf(
				esc_html__('A %s vulnerability can be used to trick authenticated site users into triggering actions crafted by the attacker. Since those actions are executed by a valid user, the site is none-the-wiser.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery" target="_blank" rel="noopener">' . esc_html__('Cross-Site Request Forgery', SKYELLSAV_L10N) . '</a>'
			),
		),
		'DOS'=>array(
			sprintf(
				esc_html__('A %s vulnerability can be leveraged by attackers to make a web site unstable or knock it offline entirely. This type of attack is commonly %s, run from multiple sources simultaneously to maximize impact.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/Denial-of-service_attack" target="_blank" rel="noopener">' . esc_html__('Denial of Service', SKYELLSAV_L10N) . '</a>',
				'<a href="https://en.wikipedia.org/wiki/Denial-of-service_attack#Distributed_attack" target="_blank" rel="noopener">' . esc_html__('distributed', SKYELLSAV_L10N) . '</a>'
			),
		),
		'FPD'=>array(
			esc_html__('The underlying file structure of a web server may not necessarily mirror the public-facing structure of the web site. This can present a challenge to attackers hoping to plant malicious files on a server.', SKYELLSAV_L10N),
			esc_html__('However when there is a Full Path Disclosure vulnerability, the internal file paths are printed publicly, showing attackers exactly where to go.', SKYELLSAV_L10N)
		),
		'LFI'=>array(
			sprintf(
				esc_html__('A %s vulnerability allows attackers to load arbitrary files stored on the server, usually small scripts containing malicious payloads like backdoors, etc.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/File_inclusion_vulnerability" target="_blank" rel="noopener">' . esc_html__('Local File Inclusion', SKYELLSAV_L10N) . '</a>'
			)
		),
		'MULTI'=>array(
			esc_html__('There are multiple vulnerabilities in this release. Please refer to the external resources, if any, for more information.', SKYELLSAV_L10N)
		),
		'PRIVESC'=>array(
			sprintf(
				esc_html__('A %s vulnerability can be used by an attacker to gain access to code that would otherwise be restricted to them.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/Privilege_escalation" target="_blank" rel="noopener">' . esc_html__('Privilege Escalation', SKYELLSAV_L10N) . '</a>'
			)
		),
		'RCE'=>array(
			sprintf(
				esc_html__('%s is a nasty vulnerability that allows attackers to run arbitrary, externally-dictated code on your server. Yikes!', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/Arbitrary_code_execution" target="_blank" rel="noopener">' . esc_html__('Remote Code Execution', SKYELLSAV_L10N) . '</a>'
			),
		),
		'REDIRECT'=>array(
			esc_html__('A redirection vulnerability typically means that an attacker is able to bypass the normal safeguards and redirect users to an arbitrary location, usually a booby-trapped page that will spawn ads or spread malware.', SKYELLSAV_L10N)
		),
		'RFI'=>array(
			sprintf(
				esc_html__('A %s vulnerability allows attackers to load arbitrary, external files into your application, meaning they can execute just about any code they want to. Yikes!', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/File_inclusion_vulnerability" target="_blank" rel="noopener">' . esc_html__('Remote File Inclusion', SKYELLSAV_L10N) . '</a>'
			)
		),
		'SQLI'=>array(
			sprintf(
				esc_html__('A %s vulnerability gives attackers access to make changes to the database, leading to defaced content, SPAM posts, etc. In some cases, SQL Injection can allow attackers to create user accounts for themselves, giving them access to the entirety of your site.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/SQL_injection" target="_blank" rel="noopener">' . esc_html__('SQL Injection', SKYELLSAV_L10N) . '</a>'
			),
		),
		'SSRF'=>array(
			esc_html__('A Server-Side Request Forgery vulnerability allows an attacker to send malicious requests *from* your server, potentially gaining access to local resources that would otherwise be restricted.', SKYELLSAV_L10N)
		),
		'UNKNOWN'=>array(
			esc_html__('The WPScan Vulnerability Database does not have a proper classification for this particular entry, hence "other".', SKYELLSAV_L10N)
		),
		'UPLOAD'=>array(
			esc_html__('An Arbitrary File Upload vulnerability is just what it sounds like: attackers can upload files directly to your web server. Sometimes attackers will be limited to the same types of files you yourself can upload through the WordPress admin interface, but other times code is so improperly handled that they can upload *anything*.', SKYELLSAV_L10N),
			esc_html__('Once malicious files are on the server, they can be used to run arbitrary code or transmit malware to site visitors.', SKYELLSAV_L10N),
		),
		'XSS'=>array(
			sprintf(
				esc_html__('A %s vulnerability allows attackers to inject malicious scripts into a page, which could be used for anything from stealing sensitive information to executing privileged actions as the visitor without their awareness.', SKYELLSAV_L10N),
				'<a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener">' . esc_html__('Cross-Site Scripting', SKYELLSAV_L10N) . '</a>'
			)
		),
		'XXE'=>array(
			sprintf(
				esc_html__('If an attacker is able to provide booby-trapped XML to an application with a %s vulnerability — either directly or by tricking a valid user into uploading or opening it — they might be able to gain privileged system access, from which all kinds of havoc might ensue.', SKYELLSAV_L10N),
				'<a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Processing" target="_blank" rel="noopener">' . esc_html__('External Entity Processing', SKYELLSAV_L10N) . '</a>'
			),
			esc_html__('SVG files and office documents are the most common vector for this sort of attack. WordPress sites which have been altered to allow these kinds of files are at particular risk.', SKYELLSAV_L10N),
		),
		// @codingStandardsIgnoreEnd
	),
);
foreach (array('plugin', 'theme') as $field) {
	foreach ($data["{$field}s"] as $v) {
		$data['exploits']["{$field}-{$v['slug']}"] = array(
			'status'=>'pending',
			'results'=>array(),
		);
	}
}


// JSON doesn't appreciate broken UTF.
common\ref\sanitize::utf8($data);
?>
<script>var skyavData=<?php echo json_encode($data, JSON_HEX_AMP); ?>;</script>
<div class="wrap" id="vue-exploits" v-cloak>
	<h1><?php echo esc_html__('Plugin & Theme Vulnerabilities Detector', SKYELLSAV_L10N); ?> (Not Pro - Autofix Disabled)</h1>

	<div class="notice notice-info" v-if="nextPending">
		<p><?php echo esc_html__('Vulnerability history is being pulled for the plugins and themes installed on your site. Hold tight!', SKYELLSAV_L10N); ?></p>
	</div>

	<div id="poststuff">
		<div id="post-body" class="metabox-holder skyav-columns one-two fixed">

			<!-- Main Items -->
			<div class="postbox-container two">
				<!-- Plugins -->
				<div class="postbox">
					<h3 class="hndle"><?php echo esc_html__('Plugins', SKYELLSAV_L10N); ?></h3>
					<div class="inside">
						<table class="skyav-results">
							<thead>
								<tr>
									<th><?php echo esc_html__('Status', SKYELLSAV_L10N); ?></th>
									<th><?php echo esc_html__('Plugin', SKYELLSAV_L10N); ?></th>
								</tr>
							</thead>
							<tbody>
								<tr class="skyav-analysis" v-for="item in plugins" v-bind:class="{'is-pending' : exploits['plugin-' + item.slug].status === 'pending'}">
									<td>
										<span class="dashicons" v-bind:class="{
											'dashicons-yes' : exploits['plugin-' + item.slug].status === 'none',
											'dashicons-no' : exploits['plugin-' + item.slug].status === 'active',
											'dashicons-minus' : exploits['plugin-' + item.slug].status === 'closed',
											'dashicons-controls-pause' : exploits['plugin-' + item.slug].status === 'pending'
										}"></span>
									</td>
									<td>
										<div class="skyav-analysis--title">
											<span v-bind:class="{'skyav-fg-orange' : exploits['plugin-' + item.slug].status === 'active'}">
												{{ item.name }}
											</span>
											<span class="skyav-fg-grey">
												({{ item.version }})
											</span>
										</div>

										<div class="skyav-exploits">
											<div class="skyav-exploit" v-for="exploit in exploits['plugin-' + item.slug].results">
												<div class="skyav-exploit--title" v-bind:class="{
													'is-fixed' : exploit.fixed,
													'is-active' : !exploit.fixed
												}">
													<span>{{ exploit.name }}</span>
												</div>
												<div class="skyav-exploit--type">
													<span>{{ types[exploit.type] }}</span>

													<span class="dashicons dashicons-info skyav-info-toggle" v-bind:class="{'is-active' : modal === exploit.type}" v-on:click.prevent="toggleModal(exploit.type)"></span>
												</div>
												<nav v-if="exploit.reference.length" class="skyav-exploit--resources">
													<span class="skyav-exploit--label">External Resources:</span>

													<a v-for="link in exploit.reference" v-bind:href="link" target="_blank" rel="noopener">{{ link }}</a>
												</nav>
											</div>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>

				<div class="postbox">
					<h3 class="hndle"><?php echo esc_html__('Themes', SKYELLSAV_L10N); ?></h3>
					<div class="inside">
						<table class="skyav-results">
							<thead>
								<tr>
									<th><?php echo esc_html__('Status', SKYELLSAV_L10N); ?></th>
									<th><?php echo esc_html__('Theme', SKYELLSAV_L10N); ?></th>
								</tr>
							</thead>
							<tbody>
								<tr class="skyav-analysis" v-for="item in themes" v-bind:class="{'is-pending' : exploits['theme-' + item.slug].status === 'pending'}">
									<td>
										<span class="dashicons" v-bind:class="{
											'dashicons-yes' : exploits['theme-' + item.slug].status === 'none',
											'dashicons-no' : exploits['theme-' + item.slug].status === 'active',
											'dashicons-minus' : exploits['theme-' + item.slug].status === 'closed',
											'dashicons-controls-pause' : exploits['theme-' + item.slug].status === 'pending'
										}"></span>
									</td>
									<td>
										<div class="skyav-analysis--title">
											<span v-bind:class="{'skyav-fg-orange' : exploits['theme-' + item.slug].status === 'active'}">
												{{ item.name }}
											</span>
											<span class="skyav-fg-grey">
												({{ item.version }})
											</span>
										</div>

										<div class="skyav-exploits">
											<div class="skyav-exploit" v-for="exploit in exploits['theme-' + item.slug].results">
												<div class="skyav-exploit--title" v-bind:class="{
													'is-fixed' : exploit.fixed,
													'is-active' : !exploit.fixed
												}">
													<span>{{ exploit.name }}</span>
												</div>
												<div class="skyav-exploit--type">
													<span>{{ types[exploit.type] }}</span>

													<span class="dashicons dashicons-info skyav-info-toggle" v-bind:class="{'is-active' : modal === exploit.type}" v-on:click.prevent="toggleModal(exploit.type)"></span>
												</div>
												<nav v-if="exploit.reference.length" class="skyav-exploit--resources">
													<span class="skyav-exploit--label">External Resources:</span>

													<a v-for="link in exploit.reference" v-bind:href="link" target="_blank" rel="noopener">{{ link }}</a>
												</nav>
											</div>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
				</div>

			</div><!--.postbox-container-->

			<!-- Sidebar -->
			<div class="postbox-container one">
				<div class="postbox">
					<h3 class="hndle"><?php echo esc_html__('WPScan Vulnerability Database', SKYELLSAV_L10N); ?></h3>
					<div class="inside">
						<?php
						$out = array(
							sprintf(
								esc_html__('The %s maintains a comprehensive history of exploitable coding errors discovered in WordPress themes and plugins.', SKYELLSAV_L10N),
								'<a href="https://wpvulndb.com/" target="_blank" rel="noopener">' . esc_html__('WPScan Vulnerability Database', SKYELLSAV_L10N) . '</a>'
							),
							esc_html__('In many cases, the threats are just that — historical. By keeping your software up-to-date, you are immune! Unless the history reveals a pattern of carelessness, you can probably ignore it.', SKYELLSAV_L10N),
							esc_html__('But if a plugin or theme has unfixed issues, it poses an active threat to your site. In such cases it is recommended you find an alternative and delete the original from your server.', SKYELLSAV_L10N),
						);

						echo '<p>' . implode('</p><p>', $out) . '</p>';
						?>
					</div>
				</div>
			</div><!--.postbox-container-->

		</div><!--#post-body-->
	</div><!--#poststuff-->



	<!-- ==============================================
	HELP MODAL
	=============================================== -->
	<transition name="fade">
		<div v-if="modal" class="skyav-modal">
			<span class="dashicons dashicons-dismiss skyav-modal--close" v-on:click.prevent="toggleModal('')"></span>
			<div class="skyav-modal--inner">
				<p v-for="p in modals[modal]" v-html="p"></p>
			</div>
		</div>
	</transition>
</div><!--.wrap-->


</div>
<? oxygen_import('Layouts.Footer'); ?>
